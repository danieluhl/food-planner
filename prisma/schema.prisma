generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Recipe {
  name         String       @id
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  breakfastDay Calendar[]   @relation("breakfast")
  dinnerDay    Calendar[]   @relation("dinner")
  lunchDay     Calendar[]   @relation("lunch")
  ingredients  Ingredient[]
}

model Calendar {
  day           Int
  month         Int
  year          Int
  timestamp     DateTime @id @unique
  breakfastName String?
  lunchName     String?
  dinnerName    String?
  breakfast     Recipe?  @relation("breakfast", fields: [breakfastName], references: [name])
  dinner        Recipe?  @relation("dinner", fields: [dinnerName], references: [name])
  lunch         Recipe?  @relation("lunch", fields: [lunchName], references: [name])

  @@unique([day, month, year])
}

model Ingredient {
  id         Int      @id @default(autoincrement())
  name       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  recipeName String
  Recipe     Recipe   @relation(fields: [recipeName], references: [name])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
